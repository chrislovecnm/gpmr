apiVersion: "apps/v1alpha1"
kind: PetSet
metadata:
  name: cassandra-analytics
spec:
  serviceName: cassandra-analytics
  replicas: 5
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
      labels:
        app: cassandra-analytics
    spec:
      containers:
      - name: cassandra-analytics
        image: "gcr.io/aronchick-apollobit/cassandra-debian:v1.1"
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "4"
            memory: 11Gi
          requests:
           cpu: "4"
           memory: 11Gi
        securityContext:
          privileged: true
        env:
          - name: MAX_HEAP_SIZE
            value: 8192M
          - name: HEAP_NEWSIZE
            value: 2048M
          - name: CASSANDRA_SEEDS
            value: "cassandra-analytics-0.cassandra-analytics.default.svc.cluster.local,cassandra-analytics-1.cassandra-analytics.default.svc.cluster.local,cassandra-data-0.cassandra-data.default.svc.cluster.local,cassandra-data-1.cassandra-data.default.svc.cluster.local"
          - name: CASSANDRA_NUM_TOKENS
            value: "16"
          - name: CASSANDRA_CLUSTER_NAME
            value: "OneKDemo"
          - name: CASSANDRA_RING_DELAY
            value: "6000"
          - name: CASSANDRA_DC
            value: "DC1-Analytics"
          - name: CASSANDRA_RACK
            value: "OneKDemo-Rack1-Analytics"
          - name: CASSANDRA_OPEN_JMX
            value: "true"
          - name: CASSANDRA_AUTO_BOOTSTRAP
            value: "false"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        # - name: CASSANDRA_GC_STDOUT
        #  value: "true"
        # todo: lifecyclehook??
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the pet volumes.
        volumeMounts:
        - name: cassandra-analytics
          mountPath: /cassandra_data
      # can we use hostPath with petset?? - would allow for restart
      #volumes:
      #  - name: cassandra-analytics
      #    emptyDir: {}
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these until ssd GCEPersistentDisk
  volumeClaimTemplates:
  - metadata:
      name: cassandra-analytics
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 380Gi
