apiVersion: "apps/v1alpha1"
kind: PetSet
metadata:
  name: cassandra
spec:
  serviceName: cassandra
  replicas: 1000
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
      labels:
        app: cassandra
    spec:
      containers:
      - name: cassandra
        #image: "gcr.io/aronchick-apollobit/cassandra-22:v1.0"
        #image: "gcr.io/aronchick-apollobit/cassandra-debian-custom:v1.0"
        image: "gcr.io/aronchick-apollobit/cassandra-debian:v1.0"
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: "2"
            memory: 5Gi
          requests:
           cpu: "2"
           memory: 5Gi
        securityContext:
          privileged: true
        env:
          - name: MAX_HEAP_SIZE
            value: 2048M
          - name: HEAP_NEWSIZE
            value: 512M
          - name: CASSANDRA_NUM_TOKENS
            value: "16"
          - name: CASSANDRA_CLUSTER_NAME
            value: OneKDemo
          - name: CASSANDRA_SERVICE_NUM_SEEDS
            value: "4"
          - name: CASSANDRA_RING_DELAY
            value: "10000"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CASSANDRA_OPEN_JMX
            value: "true"
        # - name: CASSANDRA_GC_STDOUT
        #  value: "true"
        # todo: lifecyclehook??
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the pet volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /cassandra_data
      # can we use hostPath with petset?? - would allow for restart
      volumes:
        - name: cassandra-data
          emptyDir: {}
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these until ssd GCEPersistentDisk
  #volumeClaimTemplates:
  #- metadata:
  #    name: cassandra-data
  #    annotations:
  #      # TODO: wth does this even do?
  #      volume.alpha.kubernetes.io/storage-class: ssd
  #  spec:
  #    accessModes: [ "ReadWriteOnce" ]
  #    resources:
  #      requests:
  #        storage: 100Gi
