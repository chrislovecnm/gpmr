#! /usr/bin/env python

import getopt
import sys
import datetime

from pet_race_job.pet_race import PetRace


def main(arg):
    options, remainder = getopt.getopt(arg[1:], 'h:l:p:s:c:',
                                       ['length=',
                                        'pet=',
                                        'scale=',
                                        'help'
                                        'cass='])

    keyspace = 'gpmr'
    length = None
    pet = None
    scale = None
    seeds = None

    for opt, arg in options:
        if opt in ('--length', '-l'):
            length = int(arg)
        if opt in ('--pet', '-p'):
            pet = str(arg)
        if opt in ('--scale', '-s'):
            scale = int(arg)
        if opt in ('-h', '--help'):
            print("usage: read the code")
            exit(0)
        if opt in ('-c', '--cass'):
            seeds = arg

    if seeds is None:
        seeds = ['cassandra-data-0.cassandra-data.default.svc.cluster.local',
                 'cassandra-data-1.cassandra-data.default.svc.cluster.local']

    else:
        seeds = [seeds]

    if not isinstance(length, int):
        length = 100

    if not isinstance(scale, int):
        scale = 3

    if not isinstance(pet, str):
        exit("--pet is missing")

    pet_race = PetRace(seeds=seeds, keyspace=keyspace)
    i = datetime.datetime.now()
    d = i.strftime('%Y/%m/%d %H:%M:%S')
    description = "A race of " + pet + " " + d
    pet_race.create_race(length, description, pet, scale)
    # logger.debug("running race")
    pet_race.run_race()


if __name__ == '__main__':
    main(sys.argv)
